component (Hidden = true) port_convection
% Port Convection (SS)
% This internal component models the convection through a thermal liquid
% conserving port. The energy and species flow rates are determined by the 
% smoothed upwind method.
%
%
% Copyright 2012-2025 The MathWorks, Inc.

nodes
    port = customization.solution.solution;
end

parameters
    flow_area    = {0.01, 'm^2'}; % Cross-sectional area of the port
    length_scale = {0.1,  'm'  }; % Characteristic length scale of flow path
end

parameters (Access = private)
    conduction_length = ...
        if length_scale < port.max_aspect_ratio * sqrt(4*flow_area/pi), ...
            length_scale ...
        else ...
            port.max_aspect_ratio * sqrt(4*flow_area/pi) ...
        end;
end

variables (ExternalAccess = none)
    mdot = {0, 'kg/s'}; % Mass flow rate into the port
    Phi  = {0, 'kW'  }; % Energy flow rate into the port
    mdot_x = {0, 'kg/s'}; % Species flow rate into the port

    T = {300, 'K'}; % Temperature at the port

    u_I = {85, 'kJ/kg'}; % Specific internal energy for outflow
    x_I = {0, 'kg/m^3'}; % Species concentration for outflow
end

intermediates (Access = private, ExternalAccess = none)
    % Specific internal energy for inflow and outflow
    u_in  = tablelookup(port.T_TLU, port.p_TLU, port.u_TLU, port.T, port.p, interpolation = linear, extrapolation = linear);
    u_out = u_I;

    % Thermal conduction parameter in terms of specific internal energy difference
    G = port.k_cv * flow_area / conduction_length;

    % Species concentrations for inflow and outflow switch
    x_in = port.x;
    x_out = x_I;

    % Species diffusion parameter - add new domain parameter D to control the scale of this
    G_x = port.D * rho * flow_area / length_scale;

    % Smoothed absolute value of mass flow rate for convection calculations
    % Even when mass flow rate is zero, there can be nonzero conduction
    mdot_abs = sqrt(mdot^2 + 4*G^2);
    mdot_abs_x = sqrt(mdot^2 + 4*G_x^2);

    % Smoothed step functions for energy flow rate during flow reversal
    % Smoothing is based on conduction heat flow rate which dominates near zero flow
    % and is negligible otherwise
    step_pos = (1 + mdot/mdot_abs)/2;
    step_neg = (1 - mdot/mdot_abs)/2;

    % Flow work
    pv = mdot/mdot_abs * port.p/rho;
end

intermediates (ExternalAccess = none)
    rho = x_I + tablelookup(port.T_TLU, port.p_TLU, port.rho_TLU, T, port.p, interpolation = linear, extrapolation = linear); % Density at the port
end

equations
    % Upwinded energy flow rate
    % (internal energy advection + thermal conduction + flow work)
    % Normalized by mass flow rate to improve scaling
    Phi/mdot_abs == step_pos*u_in - step_neg*u_out + pv;

    % Solve for temperature corresponding to upwind specific internal energy
    tablelookup(port.T_TLU, port.p_TLU, port.u_TLU, T, port.p, interpolation = linear, extrapolation = linear) ...
        == step_pos*u_in + step_neg*u_out;

    % Upwinded species flow rate
    % Species concentration scales with volume so include rho on LHS
    mdot_x*rho == (mdot_abs_x + mdot)/2 * x_in - (mdot_abs_x - mdot)/2 * x_out;
end

end