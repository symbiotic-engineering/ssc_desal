component unit_membrane
% Unit Membrane (SS) 
% This block models a single section of a membrane.
%
% Copyright 2021-2025 Professor Maha N. Haji, director of the Symbiotic Engineering of Analysis Lab
% Authored by: Nate DeGoede and Maha N. Haji
% For questions or concerns, please email: degoeden@umich.edu and mhaji@umich.edu

nodes
    F = customization.solution.solution;    % Feed:left
    B = customization.solution.solution;    % Brine:right
    P1 = customization.solution.solution;   % Permeate Upstream:left
    P2 = customization.solution.solution;   % Permeate Downstream:right
end

annotations
    Icon = 'membrane.svg';
end

parameters
    A_w = {2.57e-12, 'm^3/(N*s)'};  % Membrane Permeability
    B_s = {2.30e-8, 'm/s'};         % Solute transport parameter
    A_m = {35, 'm^2'};              % Membrane Unit Area
    length = {1, 'm'};              % Membrane Unit Length
    D_feed = {3, 'mm'};             % Feed channel hydraulic diameter
    area_feed = {10, 'mm^2'};       % Feed channel cross sectional area
    D_perm = {25, 'mm'};            % Permeate channel hydraulic diameter
end

parameters
    P0_feed = {1, 'MPa'};           % Feed Pressure
    P0_perm = {0.101, 'MPa'};       % Permeate Pressure
    x0_feed = {50, 'kg/m^3'};       % Feed Concentration
    x0_perm = {0, 'kg/m^3'};       % Permeate Concentration
end

% Parameter groups
annotations
    UILayout = [
        UIGroup('physmod:simscape:library:tabs:Parameters', ...
            A_w,B_s,A_m,length,D_feed,area_feed,D_perm)
        UIGroup('physmod:simscape:library:tabs:InitialConditions', ...
            P0_feed,P0_perm,x0_feed,x0_perm)
    ];
end

parameters (ExternalAccess=none)
    roughness    = {15e-6,    'm'   };  % Internal surface absolute roughness
    Re_lam       = {2000,     '1'   };  % Laminar flow upper Reynolds number limit
    Re_tur       = {4000,     '1'   };  % Turbulent flow lower Reynolds number limit
    shape_factor = {64,       '1'   };  % Laminar friction constant for Darcy friction factor
    area_perm = pi*(D_perm/2)^2;        % Permeate channel cross sectional area
    Nu_lam       = {3.66,     '1'   }; % Nusselt number for laminar flow heat transfer
end

components (ExternalAccess = observe)
    feed_pipe = customization.solution.elements.pipe(...
                        length = length, area = area_feed, Dh = D_feed,...
                        length_add = 0, roughness = roughness,...
                        Re_lam = Re_lam, Re_tur = Re_tur,...
                        shape_factor = shape_factor, Nu_lam = Nu_lam,...
                        p0 = P0_feed, x0 = x0_feed,...
                        p_measure = true, t_measure = true, x_measure = true);
    perm_pipe = customization.solution.elements.pipe(...
                        length = length, area = area_perm, Dh = D_perm,...
                        length_add = 0, roughness = roughness,...
                        Re_lam = Re_lam, Re_tur = Re_tur,...
                        shape_factor = shape_factor, Nu_lam = Nu_lam,...
                        p0 = P0_perm, x0 = x0_perm,...
                        p_measure = true, t_measure = true, x_measure = true);
    membrane_eqs = customization.membranes.membrane_eqs(...
                        A_w=A_w,B_s=B_s,A_m=A_m);
end

connections
    connect(feed_pipe.P, membrane_eqs.P_A);
    connect(feed_pipe.T, membrane_eqs.T_A);
    connect(feed_pipe.X, membrane_eqs.x_A);
    connect(perm_pipe.P, membrane_eqs.P_B);
    connect(perm_pipe.T, membrane_eqs.T_B);
    connect(perm_pipe.X, membrane_eqs.x_B);
    connect(membrane_eqs.mdot_A_x, feed_pipe.dM_X);
    connect(membrane_eqs.mdot_A_w, feed_pipe.dM_W);
    connect(membrane_eqs.Phi_A, feed_pipe.Phi);
    connect(membrane_eqs.mdot_B_x, perm_pipe.dM_X);
    connect(membrane_eqs.mdot_B_w, perm_pipe.dM_W);
    connect(membrane_eqs.Phi_B, perm_pipe.Phi);
    connect(F,membrane_eqs.F);
    connect(F,feed_pipe.A);
    connect(B,feed_pipe.B);
    connect(P1,perm_pipe.A);
    connect(P2,perm_pipe.B);
end

end