component pressure_relief_valve
% Pressure Relief Valve (SS)
% This block represents a pressure relief valve in a TL-based network. The
% valve remains closed when the pressure is less than a specified value. 
% When this pressure is met or surpassed, the valve opens. This set 
% pressure is either a threshold pressure differential over the valve, 
% between ports A and B, or between port A and atmospheric pressure.
%
% Copyright 2012-2025 The MathWorks, Inc.
nodes
    A = customization.solution.solution; % A:left
    B = customization.solution.solution; % B:right
end

parameters
    set_pressure      = {1,     'MPa'}; % Set pressure (gauge)
    reg_range         = {0.1,   'MPa'}; % Pressure regulation range
    max_area          = {0.005, 'm^2'}; % Maximum opening area
    min_area          = {1e-10, 'm^2'}; % Leakage area
    area              = {0.01, 'm^2'}; % Cross-sectional area at ports A and B
    Cd                = {0.64, '1'  }; % Discharge coefficient
    Re_c              = {150,  '1'  }; % Critical Reynolds number
end

annotations
    Icon = 'pressure_relief_valve.svg';
end

components (ExternalAccess = observe)
    pressure_reading = customization.solution.sensors.pressure_temperature_sensor(...
        reference = foundation.enum.MeasurementReference.difference,...
        pressure = true, temperature = false);
    valve = customization.solution.elements.local_restriction(...
        restriction_type = foundation.enum.restriction_type.variable,...
        min_area = min_area, max_area = max_area, area = area, Cd = Cd, Re_c = Re_c);
    open_tab = foundation.signal.lookup_tables.one_dimensional(...
        x = [0,set_pressure,set_pressure+reg_range,set_pressure+reg_range*2],...
        f = {[0,0,1,1], '1'}, interp_method = simscape.enum.interpolation.linear,...
        extrap_method = simscape.enum.extrapolation.nearest);
    delay = foundation.signal.linear.transfer_function(...
        transfer_function_type = foundation.enum.transfer_function_type.lag,...
        T = {1e-3, 's'});
end

connections
    connect(A, pressure_reading.A);
    connect(A, valve.A);
    connect(B, pressure_reading.B);
    connect(B, valve.B);
    connect(pressure_reading.P, open_tab.I);
    connect(open_tab.O, delay.U);
    connect(delay.Y, valve.area_in);
end
end